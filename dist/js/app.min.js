"use strict";$(function(){$(function(){new n,$(".menu").each(function(){new e($(this))}),$(".news").each(function(){new t($(this))})});var t=function(t){var e=t,n=e.find(".news__item"),i=function(){n.each(function(){var t=$(this),e=t.find("img"),n=t.find(".news__item-wrap");n.prepend(e.clone())})},o=function(){i()};o()},e=function(t){var e=t,n=$(".menu-btn"),i=$(".site"),o=e.find(".menu__wrap"),s="blur",a=function(){e.on({click:function(){e.removeClass("open"),i.removeClass(s)}}),n.on({click:function(){e.addClass("open"),i.addClass(s)}}),o.on({click:function(t){var t=t||window.event;t.stopPropagation?t.stopPropagation():t.cancelBubble=!0}})},c=function(){var t=window.navigator.userAgent.toLowerCase(),e=/trident/gi.test(t)||/msie/gi.test(t)||/edge/gi.test(t);e&&(s="light")},f=function(){a(),c(),o.mCustomScrollbar()};f()},n=function(t){var e=$(".site__title"),n=$(".spinner"),i=$("body"),o=function(){$(window).on({load:function(){setTimeout(function(){n.addClass("hide"),setTimeout(function(){n.remove()},500)},1e3)},resize:function(){s()}})},s=function(){var t=$(".collection").offset().top,e=$(".collection").height(),n=$(".must-have").offset().top,o=$(".must-have").height(),s=$(".must-have__bg").eq(0).offset().top,a=$(".must-have__bg").eq(0).height(),f=$(".must-have__bg").eq(1).offset().top,u=$(".must-have__bg").eq(1).height(),l=$(".most-wanted").offset().top,r=$(".most-wanted").height(),h=$(".sale").offset().top,_=$(".sale").height(),m=$(".site__header").offset().top,p=$(".site__header").height(),g=$(window).height();i.mCustomScrollbar({callbacks:{whileScrolling:function(){var i=parseInt(-1*this.mcs.top);t+e>=i&&g+i>=t&&(c($(".collection .site__title"),0,i,.3*e/(e+g)),c($(".collection__pic"),0,i,.15*e/(e+g)),c($(".collection__wrap"),i,0,.05*e/(e+g))),n+o>=i&&g+i>=n&&c($(".must-have .site__title"),0,i-(n-g),.3*o/(o+g)),s+a>=i&&g+i>=s&&c($(".must-have__bg").eq(0),0,i-(s-g),a*-.2/(a+g)),f+u>=i&&g+i>=f&&c($(".must-have__bg").eq(1),0,i-(n-g),.2*u/(u+g)),l+r>=i&&g+i>=l&&c($(".most-wanted .site__title"),0,i-(l-g),.3*r/(r+g)),h+_>=i&&g+i>=h&&(c($(".sale .site__title"),0,i-(h-g),.3*_/(_+g)),c($(".sale__bg"),0,i-(h-g),.4*_/(_+g))),m+p>=i&&g+i>=m&&c($(".site__header-bg"),0,i,.5*p/(p+g))}}})},a=function(t){var e=t.text().replace(/\s/g,""),n=e.split(""),i=n.length;t.text("");for(var o=0;i>o;o++)t.append("<span>"+n[o]+"</span>")},c=function(t,e,n,i){t.css({transform:"translate("+e*i+"px, "+n*i+"px )"})},f=function(){o(),s(),e.each(function(){a($(this))})};f()}});
//# sourceMappingURL=data:application/json;base64,
