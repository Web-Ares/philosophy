"use strict";$(function(){$(function(){new n,$(".menu").each(function(){new e($(this))}),$(".news").each(function(){new t($(this))})});var t=function(t){var e=t,n=e.find(".news__item"),o=function(){n.each(function(){var t=$(this),e=t.find("img"),n=t.find(".news__item-wrap");n.prepend(e.clone())})},i=function(){o()};i()},e=function(t){var e=t,n=$(".menu-btn"),o=$(".site"),i=e.find(".menu__wrap"),s="blur",a=function(){e.on({click:function(){e.removeClass("open"),o.removeClass(s)}}),n.on({click:function(){e.addClass("open"),o.addClass(s)}}),i.on({click:function(t){var t=t||window.event;t.stopPropagation?t.stopPropagation():t.cancelBubble=!0}})},c=function(){var t=window.navigator.userAgent.toLowerCase(),e=/trident/gi.test(t)||/msie/gi.test(t)||/edge/gi.test(t);e&&(s="light")},u=function(){a(),c(),i.mCustomScrollbar()};u()},n=function(t){var e=$(".site__title"),n=$(".spinner"),o=$("body"),i=function(){$(window).on({load:function(){setTimeout(function(){n.addClass("hide"),setTimeout(function(){n.remove()},500)},1e3)},resize:function(){o.mCustomScrollbar("update")}})},s=function(){var t=$(".collection").offset().top,e=$(".collection").height(),n=$(".must-have").offset().top,i=$(".must-have").height(),s=$(".must-have__bg").eq(0).offset().top,a=$(".must-have__bg").eq(0).height(),u=$(".must-have__bg").eq(1).offset().top,l=$(".must-have__bg").eq(1).height(),r=$(".most-wanted").offset().top,f=$(".most-wanted").height(),h=$(".sale").offset().top,_=$(".sale").height(),d=$(".site__header").offset().top,m=$(".site__header").height(),p=$(window).height();o.mCustomScrollbar({keyboard:!0,callbacks:{whileScrolling:function(){var o=parseInt(-1*this.mcs.top);t+e>=o&&p+o>=t&&(c($(".collection .site__title"),0,o,.3*e/(e+p)),c($(".collection__pic"),0,o,.15*e/(e+p)),c($(".collection__wrap"),o,0,.05*e/(e+p))),n+i>=o&&p+o>=n&&c($(".must-have .site__title"),0,o-(n-p),.3*i/(i+p)),s+a>=o&&p+o>=s&&c($(".must-have__bg").eq(0),0,o-(s-p),a*-.2/(a+p)),u+l>=o&&p+o>=u&&c($(".must-have__bg").eq(1),0,o-(n-p),.2*l/(l+p)),r+f>=o&&p+o>=r&&c($(".most-wanted .site__title"),0,o-(r-p),.3*f/(f+p)),h+_>=o&&p+o>=h&&(c($(".sale .site__title"),0,o-(h-p),.3*_/(_+p)),c($(".sale__bg"),0,o-(h-p),.4*_/(_+p))),d+m>=o&&p+o>=d&&c($(".site__header-bg"),0,o,.5*m/(m+p))}}})},a=function(t){var e=t.text().replace(/\s/g,""),n=e.split(""),o=n.length;t.text("");for(var i=0;o>i;i++)t.append("<span>"+n[i]+"</span>")},c=function(t,e,n,o){var i="translate3d("+Math.round(e*o)+"px, "+Math.round(n*o)+"px, 0px )";t.css({transform:i})},u=function(){i(),s(),e.each(function(){a($(this))})};u()}});
//# sourceMappingURL=data:application/json;base64,
